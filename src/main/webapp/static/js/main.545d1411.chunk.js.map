{"version":3,"sources":["logo_light.svg","logo_dark.svg","App.jsx","reportWebVitals.js","index.js"],"names":["StyledContainer","styled","div","StyledHeader","header","StyledMain","main","StyledFooter","footer","InlineBlock","App","useState","isLightMode","setIsLightMode","useEffect","document","querySelector","setAttribute","src","logoLight","alt","logoDark","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAAe,MAA0B,uCCA1B,MAA0B,sC,u8BCKzC,IAAMA,EAAkBC,IAAOC,IAAV,KAMfC,EAAeF,IAAOG,OAAV,KAqBZC,EAAaJ,IAAOK,KAAV,KAIVC,EAAeN,IAAOO,OAAV,KAOZC,EAAcR,IAAOC,IAAV,KAkCFQ,MA7Bf,WAAgB,IAAD,EACyBC,oBAAS,GADlC,mBACNC,EADM,KACOC,EADP,KAMb,OAJAC,qBAAU,kBAAMC,SAASC,cAAc,QACpCC,aAAa,aAAcL,EAAc,QAAU,UACpD,CAACA,IAGD,eAACZ,EAAD,WACE,eAACG,EAAD,WACE,8BACGS,EAAc,qBAAKM,IAAKC,EAAWC,IAAI,gBAAkB,qBAAKF,IAAKG,EAAUD,IAAI,kBAEpF,gCACE,cAACX,EAAD,UACE,wBAAQa,QAAS,kBAAMT,GAAgBD,IAAvC,+BAEF,cAACH,EAAD,2BAGJ,cAACJ,EAAD,IAGA,cAACE,EAAD,2CC1DSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASoB,eAAe,SAM1BZ,M","file":"static/js/main.545d1411.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_light.3e95b53f.svg\";","export default __webpack_public_path__ + \"static/media/logo_dark.86977499.svg\";","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport logoLight from './logo_light.svg'\nimport logoDark from './logo_dark.svg'\n\nconst StyledContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\nconst StyledHeader = styled.header`\n  background-color: var(--header-bg-col);\n  display: flex;\n  justify-content: space-between;\n  height: 6rem;\n  align-items: center;\n  border-bottom: 2px solid black;\n\n  img {\n    height: 5rem;\n    margin-left: 1rem;\n  }\n\n  button {\n    background-color: hsl(270, 100%, 45%);\n    color: white;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n  }\n`\n\nconst StyledMain = styled.main`\n  flex-grow: 1;\n`\n\nconst StyledFooter = styled.footer`\n  background-color: var(--header-bg-col);\n  border-top: 2px solid black;\n  height: 3rem;\n  text-align: center;\n`\n\nconst InlineBlock = styled.div`\n  display: inline-block;\n  margin: 0.5rem;\n`\n\nfunction App() {\n  const [isLightMode, setIsLightMode] = useState(true)\n  useEffect(() => document.querySelector('html')\n    .setAttribute('data-theme', isLightMode ? 'light' : 'dark'), \n    [isLightMode])\n\n  return (\n    <StyledContainer>\n      <StyledHeader>\n        <div>\n          {isLightMode ? <img src={logoLight} alt=\"StarTravels\"/> : <img src={logoDark} alt=\"StarTravels\"/>}\n        </div>\n        <div>\n          <InlineBlock>\n            <button onClick={() => setIsLightMode(!isLightMode)}>Light/Dark Mode</button>\n          </InlineBlock>\n          <InlineBlock>Log In</InlineBlock>\n        </div>\n      </StyledHeader>\n      <StyledMain>\n        \n      </StyledMain>\n      <StyledFooter>\n        Long live Klingon Empire\n      </StyledFooter>\n    </StyledContainer>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}